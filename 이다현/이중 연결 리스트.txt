-이중 연결 리스트
 단순 연결 리스트는 하나의 방향만 존재하지만, 이중 연결 리스트는 양방향이 존재한다.
따라서 양방향에서 현재 노드를 가리키기 위해서 노드의 왼쪽 오른쪽에 노드가 필요하다.
구성 : 두 개의 링크 필드, 한 개의 데이터 필드
링크 필드 : llink(left link), rlink(right link)

-데이터 가져오기
전체 인덱스를 반으로 나눈 후에 앞쪽은 llink 노드를, 뒤쪽은 rlink 노드를 이용하여 데이터를 조회한다.

-노드 추가하기
10 <-> 20 <-> 30 <-> 40 <= 이 리스트에서 20과 30 사이에 25의 newnode를 추가한다고 해보자.
newnode의 rlink를 30으로 연결해준다.
30의 llink를 newnode에 연결한다. 
20의 rlink를 newnode로 연결해준다.
newnode의 llink를 20으로 연결해준다.

-노드 제거하기
10 <-> 20 <-> 25 <-> 30 <-> 40 <= 이 리스트에서 25를 제거한다고 해보자.
삭제하려는 노드를 찾고, 25를 기준으로 llink, rlink를 찾아준다.
25를 삭제해준다. 
llink의 다음 노드를 30으로 지정한다.
rlink의 이전 노드를 20으로 지정한다.

-장점(단순 연결 리스트와 비교)
여러가지 기능을 봤을때 이중 연결 리스트의 장점은
1. 노드 전체를 탐색해야했던 단순 연결 리스트와는 다르게 양방향으로 나눠서 탐색하기 때문에 탐색해야하는 요소가 줄어든다.
2. 양방향에서 코드를 찾기때문에 속도가 빠르다.

-단점(단순 연결 리스트와 비교)
1. 단순 연결 리스트와는 다르게 변수 하나를 더 사용해야 한다. -> 메모리를 더 많이 사용한다.
2. 구현이 복잡해진다.