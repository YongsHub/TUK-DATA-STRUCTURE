1.이증 연결 리스트
1)정의
-하나의 노드가 선행 노드와 후속 노드에 대한 두개의 링크를 가지는 리스트이다.
2)필요성
응용 프로그램에서 특정 노드에서 양방향으로 자유롭게 움직일 필요가 있을때에 유용히디.
3)노드의 구조 정의
-이중 연결 리스트에서의 노드는 3개의 필드(왼쪽 링크 필드, 데이타 필드, 오른쪽 링크 필드)로 이루어져 있다.(링크필드는 포인터로 이루어져 있ek.)

|llink|data|rlink
-llink:왼쪽노드와 연결하는 포인터
-rlink:오른쪽 노드와 연결하는 포인터
-임의의 노드를 가리키는 포인터를 p라고 가정
 -> p = p->llink->rlink = p->rlink->llink라고 나타낼수 있다.

4)이중연결 리스트의 삽입
1.tail의 llink가 가리키는 노드의 rlink(head에서의 rlink)가 new를 가리킨다.(head의 rlink를 newnode를 가리킨다)
2.newnode의 llink를 tail의 llink가 기리키는 노드(head에서의 rlink)에 연결 시킨다.(newnode의 llink가 head을 가리킨다)
3.tail의 llink는 newnode를 가리킨다
4.newnode의 rlink를 tail에 가리킨다

!정리! 
1.head의 previous 포인터가 new를 가리킨다,
2.newnode의 next 포인터가 head를 가리킨다.
3.tail의 previous 포인터가 newnode의 next를 가리킨다.
4.newnode의 next값이 tail에 가르킨다

5)이중연결 리스트의 삭제
1.삭제할 노드의 llink가 기리키는 노드의 rlink(head의 rlink)를 삭제할 노드의 rlink를 가리키는 노드(tali의 llink)를 가리키게 한다.
2.삭제할 노드의 rlink를 가리키는 노드의 llink(tali의 llink)를 삭제할 노드의 llink가 가리키는 노드(head의 rlink)를 가리키게 한다
3.삭제된 노드의 메모리는 해제한다.

!정리!
1.head의 next포인터를 tail의 previous를 가리킨다
2.taild의 previous 포인터를 head의 next를 가리킨다.
3.삭제한 노드의 메모리는 해제한다(free)